# .github/workflows/ci-cd.yml
name: FraudDetectX CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Test with pytest
        run: |
          pytest --cov=./ml-training --cov=./data-generator --cov=./spark-processor

  build:
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Data Generator
        uses: docker/build-push-action@v4
        with:
          context: ./data-generator
          push: true
          tags: ghcr.io/${{ github.repository }}/data-generator:${{ github.sha }},ghcr.io/${{ github.repository }}/data-generator:latest

      - name: Build and push Spark Processor
        uses: docker/build-push-action@v4
        with:
          context: ./spark-processor
          push: true
          tags: ghcr.io/${{ github.repository }}/spark-processor:${{ github.sha }},ghcr.io/${{ github.repository }}/spark-processor:latest

      - name: Build and push ML Training
        uses: docker/build-push-action@v4
        with:
          context: ./ml-training
          push: true
          tags: ghcr.io/${{ github.repository }}/ml-training:${{ github.sha }},ghcr.io/${{ github.repository }}/ml-training:latest

      - name: Build and push ML Metrics
        uses: docker/build-push-action@v4
        with:
          context: ./ml-metrics
          push: true
          tags: ghcr.io/${{ github.repository }}/ml-metrics:${{ github.sha }},ghcr.io/${{ github.repository }}/ml-metrics:latest

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo install -o root -g root -m 0755 kustomize /usr/local/bin/kustomize

      - name: Update kustomization.yaml
        run: |
          cd k8s/overlays/dev
          kustomize edit set image data-generator=ghcr.io/${{ github.repository }}/data-generator:${{ github.sha }}
          kustomize edit set image spark-processor=ghcr.io/${{ github.repository }}/spark-processor:${{ github.sha }}
          kustomize edit set image ml-training=ghcr.io/${{ github.repository }}/ml-training:${{ github.sha }}
          kustomize edit set image ml-metrics=ghcr.io/${{ github.repository }}/ml-metrics:${{ github.sha }}

      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add k8s/overlays/dev
          git commit -m "Update image versions to ${{ github.sha }}"
          git push